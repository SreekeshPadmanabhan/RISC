--===========================================================================
-- SP : Scratch Pad
--===========================================================================
Library ieee;
Use ieee.std_logic_1164.all;
Use ieee.std_logic_misc.all;
Use ieee.std_logic_arith.all;
Use ieee.std_logic_unsigned.all;
USE WORK.reg_dmem.ALL;

PACKAGE SP_pkg  IS 
TYPE scratch_pad IS RECORD
 PC   : STD_LOGIC_VECTOR(11 DOWNTO 0);
 rgstr: rgstrs;
END RECORD;
END SP_pkg;

--==========================================================================================
-- Interrupt Handler: Priortizer
--==========================================================================================
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_misc.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;
USE WORK.SP_pkg.ALL;
USE WORK.reg_dmem.ALL;
-------------------------------------------------------------------
ENTITY InterruptHandler IS
 GENERIC(N:integer:=4);
 PORT(Interrupts  : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
      
      ClkCycle    : IN STD_LOGIC_VECTOR(1 DOWNTO 0);                            
      RETI        : IN STD_LOGIC;                                        
      
      MEMAddr     : INOUT STD_LOGIC_VECTOR(11 DOWNTO 0);
      rgstr_bnk   : INOUT rgstrs;      
      PCAddr      : OUT STD_LOGIC_VECTOR(11 DOWNTO 0));                   
END InterruptHandler;   
 
ARCHITECTURE InterruptHandler OF InterruptHandler IS 
 SIGNAL scratch_pad: scratch_pad;    
BEGIN 
  --<= "000000000000";
  --<=   ("00000000", "00000000", "00000000", "00000000",
  --        "00000000", "00000000", "00000000", "00000000",
  --        "00000000", "00000000", "00000000", "00000000",
  --        "00000000", "00000000", "00000000", "00000000");
 PROCESS(Interrupts)
 BEGIN   
 IF (Interrupts /= "0000" AND ClkCycle="10") THEN  
  scratch_pad.PC    <= MEMAddr; 
  scratch_pad.rgstr <= rgstr_bnk;      
  IF(Interrupts(3) = '1')    THEN           
   PCAddr <= "0010000000";                                   
  ELSIF(Interrupts(2) = '1') THEN         
   PCAddr <= "000100000000";               
  ELSIF(Interrupts(1) = '1') THEN       
   PCAddr <= "000010000000";          
  ELSIF(Interrupts(0) = '1') THEN         
   PCAddr <= "0000010000000";             
  END IF;         
 END IF;

 IF (Interrupts = "0000" and RETI = '1') THEN          
  rgstr_bnk <= scratch_pad.rgstr;
  MEMAddr   <= scratch_pad.PC;
  --RETI = 0;
 END IF;    
 END PROCESS;
END InterruptHandler; 
